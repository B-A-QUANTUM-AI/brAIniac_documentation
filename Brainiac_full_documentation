1. AI SOLUTION 


2. BUSINESS OBJECTIVES
  A. Healthcare Impact & Clinical Adoption
       Improve brain tumor diagnostic accuracy using better training data for AI models
       Lower diagnostic time and expenses in clinical settings with reliable automated analysis
       Increase patient outcomes by early detection and precise treatment planning
  B. Scalability & Growth
       Develop techniques for greater medical imaging domains
       Create a platform for ongoing dataset maintenance and expansion
       Create an ecosystem of tools and services built on the core dataset
  C. Expand Global Access to Precision Diagnostics
       To enhance access to brain tumor diagnosis in low-resource locations, use AI techniques trained on BRISC.

3. BUSINESS SUCCESS CRITERIA
    A. Accuracy 
         Aim for at least 90% accuracy when classifying brain MRI scans into the different categories: Healthy, Glioma, Meningioma, and Pituitary Adenoma.
    B.Time Efficiency 
         Process each scan and generate a full analysis report, including detection, classification, and visualization outputs, in under 5 minutes.
    C.Usability
         The system interface shall be designed for intuitive operation, enabling personnel without a medical background to process scans and generate reports effectively

4. BUSINESS BACKGROUND

5. REQUIREMENTS
A. Functional Requirements:
    •	Input MRI scans in digital format. 
    •	The system must normalize and preprocess images (e.g., resize, contrast adjustment, noise reduction).
    •	The system must classify tumors into one of four categories: Glioma, Meningioma, Pituitary Adenoma, or No Tumor.
    •	The system must provide a confidence score (%) for each prediction.
    •	The system must generate a diagnostic report summarizing: tumor type, probability, and recommendations for further analysis.
    •	The system must notify radiologists if a high-probability tumor is detected.
    •	The system must flag urgent cases for priority review.
    •	Generate summary reports for radiologists.
B. Non-Functional Requirements:
    •	The system must achieve at least 90% accuracy in tumor classification.
    •	The system must analyze an MRI scan and generate results in under 5 minutes.
    •	The system must handle at least 30 MRI scans per hour concurrently.
    •	The system must maintain consistent performance across different MRI machine models.
    •	The system must support expansion to other departments and hospitals in future.
    •	The system must comply with South Africa’s POPIA healthcare data privacy regulations.
    •	The system must be available 99.9% of the time.
    •	User-friendly dashboard for non-technical staff.
6. CONSTRAINTS.
    The brAIniac system is limited to the analysis of MRI brain scans only.
    The brain tumor classification is restricted to Glioma, Meningioma, and Pituitary Adenoma only.
    The system will use Grad-MAP heatmaps to further illustrate the seriousness of the tumor.
    The brAIniac will ensure transparency in reporting tumor detection, classification and risk assessment therefore the transparency in how risk levels are determined is non-negotiable.
    The system will not predict how long a patient will live, it is limited to analyzing MRI brain scans and classifying the seriousness of brain tumors.
    The brAIniac system is not going to replace medical professionals but to support and help them in medical decision-making.

7. RISKS

8. TOOLS AND TECHNIQUES
    A.	Python 
          The main development language due to its wide range of AI/ML libraries and strong community support
    B.	Machine Learning and Deep Learning Techniques
          •	Linear regression – for the numerical predictions like tumor size.
          •	Convolutional Neural Networks (CNNs) – for tumor detection and classification from the MRI scans.
          •	Image Segmentation Model (resNet) – for identifying tumor size and location.
          •	Risk Assessment Algorithms – to assign the priority levels of the tumor(Low, Medium and High).
    C.	Python Libraries
          •	Pandas – for arranging and processing MRI metadata and patient file records
          •	Numpy – for handling numerical operations.
          •	Scikit-Learn – for ML tasks (classification, regression)
          •	TensorFlow / PyTorch – for DL (CNNs and resNet)
    D.	Development and collaboration Tools and Techniques
          •	Face to face meetings – To discuss the work and brainstorm ideas
          •	WhatsApp – for faster and ease of communications
          •	Git and GitHub – version control, code collaboration and project management
          •	Visual Studio Code – for development of brAIniac codebase
    E.	Support Tools
          •	Grammarly – for formatting documentation
          •	MS Word – for generating documentation for brAIniac project
          •	Notepad – for generating documentation on how to use brAIniac
          •	Canva/Figma – for creating poster and presentation design
